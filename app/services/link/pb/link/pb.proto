syntax = "proto3";

package link;

import "validate/validate.proto";

option go_package = "link";

//@formatter:off

service LinkDomainService {
    rpc CreateLink (CreateLinkRequest) returns (CreateLinkResponse) {}
    rpc DeleteLink (DeleteLinkRequest) returns (DeleteLinkResponse) {}

    rpc FindLinks  (FindLinksRequest)  returns (FindLinksResponse) {}
}

message CreateLinkRequest {
    LinkEntity Link = 1 [(validate.rules).message.required = true];
}

message CreateLinkResponse {
    LinkEntity Link = 1;
}

message DeleteLinkRequest {
    string LinkID  = 1 [(validate.rules).string.min_len = 1];
    string UserID  = 2 [(validate.rules).string.min_len = 1];
}

message DeleteLinkResponse {}

message FindLinksRequest {
    string UserID = 1 [(validate.rules).string.min_len = 1];
    uint64 Limit  = 2;
    uint64 Offset = 3;
}

message FindLinksResponse {
    repeated LinkEntity Items = 1;
    uint64   TotalLinksNumber = 2;
}

//
// Shared messages
//

message LinkEntity {
    string LinkID  = 1;
    string UserID  = 2;
    string Name    = 3 [(validate.rules).string.min_len = 1];
    string Address = 4 [(validate.rules).string.min_len = 1];
}

//
// Service's error codes
//

enum LinkDomainServiceErrorCode {
    Unknown         = 0;
    Internal        = 5000;
    InvalidRequest  = 4000;
}

//@formatter:on
